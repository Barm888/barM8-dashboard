angular.module('app').controller('drinksOrderCtl',['$scope','$state','$http','Business','$rootScope','DrinksOrder','DrinksOrderType','socket','loader',function($scope,$state,$http,Business,$rootScope,DrinksOrder,DrinksOrderType,socket,loader){toastMsg=(isVaild,msg)=>{if(isVaild)
    toastr.success(msg);else toastr.error(msg);toastr.options={"closeButton":!0,"progressBar":!0,"timeOut":"5000"}}
    socket.on('pushDrinksOrders',function(data){if($scope.userId){DrinksOrder.find({filter:{where:{ownerId:$scope.userId},include:[{relation:"drinksOrderLines",scope:{include:[{relation:"drinksOrderSubLines",scope:{include:[{relation:"drinksDashSubLine"},{relation:"drinksSpecialDashSubLine"}]}},{relation:"drinksExtras"},{relation:"drinksMixers"},{relation:"drinksOrderCategory"},{relation:"drinksDashLine"},{relation:"drinksSpecialDashLine"}]}},{relation:"customer"},{relation:"drinksOrderType"}],"order":"isCreate desc"}}).$promise.then((res)=>{if(res&&res.length){toastMsg(!0,'We have got new Order.');$scope.drinksOrdersList=res}})}});$(".drinks-sub-menu").addClass('in slowDown');$(".drinks-menu").html(`<i class="fas fa-cocktail"></i> <span class="nav-label"> &nbsp; Drinks Menu </span> <i class="fas fa-angle-down pull-right"></i>`);$scope.isBusinessSelect=!1;if(!$scope.userId)$scope.userId=$rootScope.currentUser.id;$scope.useremail=$rootScope.currentUser.email;$scope.userId="";if($rootScope&&$rootScope.currentUser&&$rootScope.currentUser.email=="admin@barm8.com.au"){$scope.isBusinessSelect=!0;Business.find({filter:{where:{status:"approved"},"fields":["businessName","id","email"]}}).$promise.then((res)=>{$scope.businessDelection=res;$scope.userId=$rootScope.currentUser.id},(err)=>{console.log(JSON.stringify())})}
    else{$scope.isBusinessSelect=!0;$scope.userId=$rootScope.currentUser.id}
    $scope.getBusinessName=()=>{return $scope.businessDelection};$scope.drinksOrdersList=[];$scope.getOrders=()=>{if($scope.userId){loader.visible();DrinksOrder.find({filter:{where:{ownerId:$scope.userId},include:[{relation:"drinksOrderLines",scope:{include:[{relation:"drinksOrderSubLines",scope:{include:[{relation:"drinksDashSubLine"},{relation:"drinksSpecialDashSubLine"}]}},{relation:"drinksExtras"},{relation:"drinksMixers"},{relation:"drinksOrderCategory"},{relation:"drinksDashLine"},{relation:"drinksSpecialDashLine"}]}},{relation:"customer"},{relation:"drinksOrderType"}],"order":"isCreate desc"}}).$promise.then((res)=>{setTimeout(()=>{loader.hidden()},500);if(res&&res.length)$scope.drinksOrdersList=res})}};$scope.drinksOrderTypes=[];$scope.getdrinksOrderTypes=()=>DrinksOrderType.find().$promise.then((res)=>$scope.drinksOrderTypes=res)
    $scope.getdrinksOrderTypes();$scope.BusinessSelected=(arg)=>{$("#businessErr").text('');if(arg){if(arg=='manageEvent'){if($("#autocompleteBusiness").data('id')){arg=$("#autocompleteBusiness").data('id');if($("#businessSubmit").hasClass('businessSubmit')){$("#businessSubmit").html('<i class="fa fa-check" aria-hidden="true"></i>&nbsp;&nbsp;Reset').removeClass('businessSubmit').addClass('businessReset')}
    if(arg!="select"){$scope.isBusinessSelect=!0;$scope.userId=arg;$scope.getOrders();$rootScope.selectedVenue={venueId:$scope.userId,venueName:$("#autocompleteBusiness").val()}}}else $("#businessErr").text('Please select the Business name')}}}
    $scope.listClk=(id,status)=>{$("#pre-order-table-div").css('display','none');if($("#O_F_L_1").hasClass('col-md-12')){$("#O_F_L_1").removeClass('col-md-12 col-sm-12 col-xs-12 col-lg-12').addClass('col-md-8 col-sm-12 col-xs-12 col-lg-8');$("#BAR_O_D_L").addClass('col-md-4 col-sm-12 col-xs-12 col-lg-4').css({display:'block'})}
    if(status&&status=='collect@Bar'){$("#O_S_B_E_4").empty().removeClass('table-s-text').addClass('collect-in-text').html('<span class="dine-order-round"></span> Collect @ Bar');if($("#_B_B_L").hasClass('table-s-border')){$("#_B_B_L").removeClass('table-s-border').addClass('collect-in-border')}else $("#_B_B_L").addClass('table-s-border')}else if(status&&status=='tableServe'){$("#O_S_B_E_4").empty().removeClass('collect-in-text').addClass('table-s-text').html('<span class="pre-order-round"></span> Table Serve');$("#_B_B_L").removeClass('collect-in-border').addClass('table-s-border');$("#pre-order-table-div").css('display','block')}
    $scope.order_product=$scope.drinksOrdersList.find(m=>m&&m.id==id);$(`#table-tr-${id}`).css('background-color','#80808038');DrinksOrder.upsertWithWhere({where:{id}},{isOpen:!0})
    if($(window).width()<=800){$('html,body').animate({scrollTop:$("#BAR_O_D_L").offset().top},200)}};$scope.getReasonforreject=(id,status,type)=>{$("#reject-Save-Btn").attr('data-update-status',JSON.stringify({id,status,type}));$("#getReasonsforReject").modal({backdrop:'static',keyboard:!1})}
    $scope.updateStatus=(id,status,type)=>{if(id){if(status=='rejected')$("#getReasonsforReject").modal('hide');let tableNo=$("#table-no-pre-order").val(),reason=null;if($('#drinks-order-r-reason').val())reason=$('#drinks-order-r-reason').val();loader.visible();DrinksOrder.updateStatus({params:{id,status,tableNo,reason}}).$promise.then((res)=>{if(status=='rejected')toastMsg(!0,'Order has been Successfully Rejected.');else if(status=='accepted')toastMsg(!0,'Order has been Successfully Accepted.');else toastMsg(!0,'Successfully Updated.');if(res.data.isSuccess&&$scope.userId){$scope.getOrders();DrinksOrder.findOne({filter:{where:{ownerId:$scope.userId,id},include:[{relation:"drinksOrderLines",scope:{include:[{relation:"drinksOrderSubLines",scope:{include:[{relation:"drinksDashSubLine"},{relation:"drinksSpecialDashSubLine"}]}},{relation:"drinksExtras"},{relation:"drinksMixers"},{relation:"drinksOrderCategory"},{relation:"drinksDashLine"},{relation:"drinksSpecialDashLine"}]}},{relation:"customer"},{relation:"drinksOrderType"}],"order":"isCreate desc"}}).$promise.then((drinksRes)=>{$scope.order_product=drinksRes});$("#O_F_L_1").removeClass('col-md-12 col-sm-12 col-xs-12 col-lg-12').addClass('col-md-8 col-sm-12 col-xs-12 col-lg-8');$("#BAR_O_D_L").addClass('col-md-4 col-sm-12 col-xs-12 col-lg-4').css({display:'block'});setTimeout(function(){loader.hidden()},500)}},(err)=>{toastMsg(!1,'Not updated. Please try again!')})}}}])